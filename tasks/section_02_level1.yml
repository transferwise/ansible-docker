---

- name: Create docker daemon json file
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
  notify: Reload docker

- meta: flush_handlers

- name: 2.1 Ensure network traffic is restricted between containers on the default bridge (Scored)
  command: bash -c 'docker network inspect bridge --format "{{ '{{' }} .Options {{ '}}' }}" | grep com.docker.network.bridge.enable_icc:false -q'
  register: res
  failed_when: res.rc == 1
  changed_when: res.rc == 1

- name: 2.2 Ensure the logging level is set to 'info' (Scored)
  command: bash -c "docker info | grep 'log-level=info' -q"
  register: res
  failed_when: res.rc == 1
  changed_when: res.rc == 1

- name: 2.3 Ensure Docker is allowed to make changes to iptables (Scored)
  command: bash -c "docker info | grep 'iptables=true' -q"
  register: res
  failed_when: res.rc == 1
  changed_when: res.rc == 1

# There should only be 1 insecure registry, and that is 127.0.0.1/8
- name: 2.4 Ensure insecure registries are not used (Scored)
  command: bash -c "docker info | grep 'Insecure Registries' -a2 | grep 'Live Restore' -q"
  register: res
  failed_when: res.rc == 1
  changed_when: res.rc == 1

- name: 2.5 Ensure aufs storage driver is not used (Scored)
  command: bash -c "docker info | grep 'Storage Driver' | awk '{print $3}'"
  register: res
  failed_when: res.stdout.find("aufs") == true
  changed_when: res.stdout.find("aufs") == true

- name: Find out if Docker is running on socket or TCP
  command: bash -c "systemctl cat docker.service | grep ExecStart | awk '{print $3}' | grep 'fd://' -q"
  register: docker_is_unix_socket

# Only run this when we're _not_ running on TCP
- name: 2.6 Ensure TLS authentication for Docker daemon is configured (Scored)
  command: bash -c "docker info | grep {{ item }} -q "
  failed_when: res.stdout.rc == 1
  changed_when: res.stdout.rc == 1
  with_items:
    - tlsverify
    - tlscacert
    - tlscert
    - tlskey
  when: docker_is_unix_socket.rc == 1

- name: 2.7 Ensure the default ulimit is configured appropriately (Not Scored)
  command: bash -c "docker info | grep ulimit -q "
  failed_when: res.stdout.rc == 1
  changed_when: res.stdout.rc == 1
